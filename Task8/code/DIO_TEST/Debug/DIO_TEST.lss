
DIO_TEST.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000a14  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .stab         00000b40  00000000  00000000  00000a68  2**2
                  CONTENTS, READONLY, DEBUGGING
  2 .stabstr      00000697  00000000  00000000  000015a8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   8:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
   c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  10:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  14:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  18:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  1c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  20:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  24:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  28:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  2c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  30:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  34:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  38:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  3c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  40:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  44:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  48:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  4c:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>
  50:	0c 94 34 00 	jmp	0x68	; 0x68 <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61
  60:	0e 94 36 00 	call	0x6c	; 0x6c <main>
  64:	0c 94 08 05 	jmp	0xa10	; 0xa10 <_exit>

00000068 <__bad_interrupt>:
  68:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

0000006c <main>:
#include"../1-MCAL/DIO/DIO_interface.h"
int main(){
  6c:	df 93       	push	r29
  6e:	cf 93       	push	r28
  70:	00 d0       	rcall	.+0      	; 0x72 <main+0x6>
  72:	cd b7       	in	r28, 0x3d	; 61
  74:	de b7       	in	r29, 0x3e	; 62
	DIO_enu_Init();
  76:	0e 94 90 00 	call	0x120	; 0x120 <DIO_enu_Init>
	/*Pins Directions*/
	DIO_enu_SetPinDirection(DIO_U8_PORTA,DIO_U8_PIN0,DIO_U8_INPUT);
  7a:	80 e0       	ldi	r24, 0x00	; 0
  7c:	60 e0       	ldi	r22, 0x00	; 0
  7e:	40 e0       	ldi	r20, 0x00	; 0
  80:	0e 94 b0 00 	call	0x160	; 0x160 <DIO_enu_SetPinDirection>
	DIO_enu_SetPinDirection(DIO_U8_PORTA,DIO_U8_PIN5,DIO_U8_OUTPUT);
  84:	80 e0       	ldi	r24, 0x00	; 0
  86:	65 e0       	ldi	r22, 0x05	; 5
  88:	41 e0       	ldi	r20, 0x01	; 1
  8a:	0e 94 b0 00 	call	0x160	; 0x160 <DIO_enu_SetPinDirection>
	DIO_enu_SetPinDirection(DIO_U8_PORTB,DIO_U8_PIN1,DIO_U8_INPUT);
  8e:	81 e0       	ldi	r24, 0x01	; 1
  90:	61 e0       	ldi	r22, 0x01	; 1
  92:	40 e0       	ldi	r20, 0x00	; 0
  94:	0e 94 b0 00 	call	0x160	; 0x160 <DIO_enu_SetPinDirection>
	DIO_enu_SetPinDirection(DIO_U8_PORTB,DIO_U8_PIN3,DIO_U8_OUTPUT);
  98:	81 e0       	ldi	r24, 0x01	; 1
  9a:	63 e0       	ldi	r22, 0x03	; 3
  9c:	41 e0       	ldi	r20, 0x01	; 1
  9e:	0e 94 b0 00 	call	0x160	; 0x160 <DIO_enu_SetPinDirection>
	DIO_enu_SetPinDirection(DIO_U8_PORTC,DIO_U8_PIN0,DIO_U8_OUTPUT);
  a2:	82 e0       	ldi	r24, 0x02	; 2
  a4:	60 e0       	ldi	r22, 0x00	; 0
  a6:	41 e0       	ldi	r20, 0x01	; 1
  a8:	0e 94 b0 00 	call	0x160	; 0x160 <DIO_enu_SetPinDirection>
	DIO_enu_SetPortDirection(DIO_U8_PORTD,DIO_U8_OUTPUT);
  ac:	83 e0       	ldi	r24, 0x03	; 3
  ae:	61 e0       	ldi	r22, 0x01	; 1
  b0:	0e 94 c2 03 	call	0x784	; 0x784 <DIO_enu_SetPortDirection>
	/*Switch Read*/
	u8 switchRead1;
	u8 switchRead2;
	while(1){
		/*Set Pin Values*/
		DIO_enu_SetPinValue(DIO_U8_PORTC,DIO_U8_PIN0,DIO_U8_HIGH);
  b4:	82 e0       	ldi	r24, 0x02	; 2
  b6:	60 e0       	ldi	r22, 0x00	; 0
  b8:	41 e0       	ldi	r20, 0x01	; 1
  ba:	0e 94 da 01 	call	0x3b4	; 0x3b4 <DIO_enu_SetPinValue>
		DIO_enu_SetPortValue(DIO_U8_PORTD,0xff);
  be:	83 e0       	ldi	r24, 0x03	; 3
  c0:	6f ef       	ldi	r22, 0xFF	; 255
  c2:	0e 94 63 04 	call	0x8c6	; 0x8c6 <DIO_enu_SetPortValue>
		/*Get Pin Values*/
		DIO_enu_GetPinValue(DIO_U8_PORTA,DIO_U8_PIN0,&switchRead1);
  c6:	80 e0       	ldi	r24, 0x00	; 0
  c8:	60 e0       	ldi	r22, 0x00	; 0
  ca:	9e 01       	movw	r18, r28
  cc:	2f 5f       	subi	r18, 0xFF	; 255
  ce:	3f 4f       	sbci	r19, 0xFF	; 255
  d0:	a9 01       	movw	r20, r18
  d2:	0e 94 04 03 	call	0x608	; 0x608 <DIO_enu_GetPinValue>
		DIO_enu_GetPinValue(DIO_U8_PORTB,DIO_U8_PIN1,&switchRead2);
  d6:	9e 01       	movw	r18, r28
  d8:	2e 5f       	subi	r18, 0xFE	; 254
  da:	3f 4f       	sbci	r19, 0xFF	; 255
  dc:	81 e0       	ldi	r24, 0x01	; 1
  de:	61 e0       	ldi	r22, 0x01	; 1
  e0:	a9 01       	movw	r20, r18
  e2:	0e 94 04 03 	call	0x608	; 0x608 <DIO_enu_GetPinValue>
		/*Check Switch1 is pressed or not*/
		if(switchRead1 == DIO_U8_HIGH){
  e6:	89 81       	ldd	r24, Y+1	; 0x01
  e8:	81 30       	cpi	r24, 0x01	; 1
  ea:	31 f4       	brne	.+12     	; 0xf8 <main+0x8c>
			/*TURN ON LED*/
			DIO_enu_SetPinValue(DIO_U8_PORTA,DIO_U8_PIN5,DIO_U8_HIGH);
  ec:	80 e0       	ldi	r24, 0x00	; 0
  ee:	65 e0       	ldi	r22, 0x05	; 5
  f0:	41 e0       	ldi	r20, 0x01	; 1
  f2:	0e 94 da 01 	call	0x3b4	; 0x3b4 <DIO_enu_SetPinValue>
  f6:	05 c0       	rjmp	.+10     	; 0x102 <main+0x96>
		}
		else{
			/*TURN OFF LED*/
			DIO_enu_SetPinValue(DIO_U8_PORTA,DIO_U8_PIN5,DIO_U8_LOW);
  f8:	80 e0       	ldi	r24, 0x00	; 0
  fa:	65 e0       	ldi	r22, 0x05	; 5
  fc:	40 e0       	ldi	r20, 0x00	; 0
  fe:	0e 94 da 01 	call	0x3b4	; 0x3b4 <DIO_enu_SetPinValue>
		}
		/*Check Switch2 is pressed or not*/
		if(switchRead2 == DIO_U8_HIGH){
 102:	8a 81       	ldd	r24, Y+2	; 0x02
 104:	81 30       	cpi	r24, 0x01	; 1
 106:	31 f4       	brne	.+12     	; 0x114 <main+0xa8>
			/*TURN ON LED*/
			DIO_enu_SetPinValue(DIO_U8_PORTB,DIO_U8_PIN3,DIO_U8_HIGH);
 108:	81 e0       	ldi	r24, 0x01	; 1
 10a:	63 e0       	ldi	r22, 0x03	; 3
 10c:	41 e0       	ldi	r20, 0x01	; 1
 10e:	0e 94 da 01 	call	0x3b4	; 0x3b4 <DIO_enu_SetPinValue>
 112:	d0 cf       	rjmp	.-96     	; 0xb4 <main+0x48>
		}
		else{
			/*TURN OFF LED*/
			DIO_enu_SetPinValue(DIO_U8_PORTB,DIO_U8_PIN3,DIO_U8_LOW);
 114:	81 e0       	ldi	r24, 0x01	; 1
 116:	63 e0       	ldi	r22, 0x03	; 3
 118:	40 e0       	ldi	r20, 0x00	; 0
 11a:	0e 94 da 01 	call	0x3b4	; 0x3b4 <DIO_enu_SetPinValue>
 11e:	ca cf       	rjmp	.-108    	; 0xb4 <main+0x48>

00000120 <DIO_enu_Init>:
/*MCAL*/
#include"DIO_private.h"
#include"DIO_config.h"


ES_t DIO_enu_Init(void){
 120:	df 93       	push	r29
 122:	cf 93       	push	r28
 124:	cd b7       	in	r28, 0x3d	; 61
 126:	de b7       	in	r29, 0x3e	; 62
    DIO_U8_DDRA_REG = Conc(DIO_U8_PA7_INITIAL_DIRECTION,DIO_U8_PA6_INITIAL_DIRECTION,DIO_U8_PA5_INITIAL_DIRECTION,DIO_U8_PA4_INITIAL_DIRECTION,
 128:	ea e3       	ldi	r30, 0x3A	; 58
 12a:	f0 e0       	ldi	r31, 0x00	; 0
 12c:	10 82       	st	Z, r1
                           DIO_U8_PA3_INITIAL_DIRECTION,DIO_U8_PA2_INITIAL_DIRECTION,DIO_U8_PA1_INITIAL_DIRECTION,DIO_U8_PA0_INITIAL_DIRECTION);
    DIO_U8_DDRB_REG = Conc(DIO_U8_PB7_INITIAL_DIRECTION,DIO_U8_PB6_INITIAL_DIRECTION,DIO_U8_PB5_INITIAL_DIRECTION,DIO_U8_PB4_INITIAL_DIRECTION,
 12e:	e7 e3       	ldi	r30, 0x37	; 55
 130:	f0 e0       	ldi	r31, 0x00	; 0
 132:	10 82       	st	Z, r1
                           DIO_U8_PB3_INITIAL_DIRECTION,DIO_U8_PB2_INITIAL_DIRECTION,DIO_U8_PB1_INITIAL_DIRECTION,DIO_U8_PB0_INITIAL_DIRECTION);

    DIO_U8_DDRC_REG = Conc(DIO_U8_PC7_INITIAL_DIRECTION,DIO_U8_PC6_INITIAL_DIRECTION,DIO_U8_PC5_INITIAL_DIRECTION,DIO_U8_PC4_INITIAL_DIRECTION,
 134:	e4 e3       	ldi	r30, 0x34	; 52
 136:	f0 e0       	ldi	r31, 0x00	; 0
 138:	10 82       	st	Z, r1
                           DIO_U8_PC3_INITIAL_DIRECTION,DIO_U8_PC2_INITIAL_DIRECTION,DIO_U8_PC1_INITIAL_DIRECTION,DIO_U8_PC0_INITIAL_DIRECTION);

    DIO_U8_DDRD_REG = Conc(DIO_U8_PD7_INITIAL_DIRECTION,DIO_U8_PD6_INITIAL_DIRECTION,DIO_U8_PD5_INITIAL_DIRECTION,DIO_U8_PD4_INITIAL_DIRECTION,
 13a:	e1 e3       	ldi	r30, 0x31	; 49
 13c:	f0 e0       	ldi	r31, 0x00	; 0
 13e:	10 82       	st	Z, r1
                           DIO_U8_PD3_INITIAL_DIRECTION,DIO_U8_PD2_INITIAL_DIRECTION,DIO_U8_PD1_INITIAL_DIRECTION,DIO_U8_PD0_INITIAL_DIRECTION);

    DIO_U8_PORTA_REG = Conc(DIO_U8_PA7_INITIAL_VALUE,DIO_U8_PA6_INITIAL_VALUE,DIO_U8_PA5_INITIAL_VALUE,DIO_U8_PA4_INITIAL_VALUE,
 140:	eb e3       	ldi	r30, 0x3B	; 59
 142:	f0 e0       	ldi	r31, 0x00	; 0
 144:	10 82       	st	Z, r1
                            DIO_U8_PA3_INITIAL_VALUE,DIO_U8_PA2_INITIAL_VALUE,DIO_U8_PA1_INITIAL_VALUE,DIO_U8_PA0_INITIAL_VALUE);

    DIO_U8_PORTB_REG = Conc(DIO_U8_PB7_INITIAL_VALUE,DIO_U8_PB6_INITIAL_VALUE,DIO_U8_PB5_INITIAL_VALUE,DIO_U8_PB4_INITIAL_VALUE,
 146:	e8 e3       	ldi	r30, 0x38	; 56
 148:	f0 e0       	ldi	r31, 0x00	; 0
 14a:	10 82       	st	Z, r1
                            DIO_U8_PB3_INITIAL_VALUE,DIO_U8_PB2_INITIAL_VALUE,DIO_U8_PB1_INITIAL_VALUE,DIO_U8_PB0_INITIAL_VALUE);

    DIO_U8_PORTC_REG = Conc(DIO_U8_PC7_INITIAL_VALUE,DIO_U8_PC6_INITIAL_VALUE,DIO_U8_PC5_INITIAL_VALUE,DIO_U8_PC4_INITIAL_VALUE,
 14c:	e5 e3       	ldi	r30, 0x35	; 53
 14e:	f0 e0       	ldi	r31, 0x00	; 0
 150:	10 82       	st	Z, r1
                            DIO_U8_PC3_INITIAL_VALUE,DIO_U8_PC2_INITIAL_VALUE,DIO_U8_PC1_INITIAL_VALUE,DIO_U8_PC0_INITIAL_VALUE);

    DIO_U8_PORTD_REG = Conc(DIO_U8_PD7_INITIAL_VALUE,DIO_U8_PD6_INITIAL_VALUE,DIO_U8_PD5_INITIAL_VALUE,DIO_U8_PD4_INITIAL_VALUE,
 152:	e2 e3       	ldi	r30, 0x32	; 50
 154:	f0 e0       	ldi	r31, 0x00	; 0
 156:	10 82       	st	Z, r1
                            DIO_U8_PD3_INITIAL_VALUE,DIO_U8_PD2_INITIAL_VALUE,DIO_U8_PD1_INITIAL_VALUE,DIO_U8_PD0_INITIAL_VALUE);
    return SATE_OK;
 158:	80 e0       	ldi	r24, 0x00	; 0
}
 15a:	cf 91       	pop	r28
 15c:	df 91       	pop	r29
 15e:	08 95       	ret

00000160 <DIO_enu_SetPinDirection>:
ES_t DIO_enu_SetPinDirection (u8 Copy_u8_PortId, u8 Copy_u8_PinId,u8 Copy_u8_PinDirection)
{
 160:	df 93       	push	r29
 162:	cf 93       	push	r28
 164:	cd b7       	in	r28, 0x3d	; 61
 166:	de b7       	in	r29, 0x3e	; 62
 168:	2e 97       	sbiw	r28, 0x0e	; 14
 16a:	0f b6       	in	r0, 0x3f	; 63
 16c:	f8 94       	cli
 16e:	de bf       	out	0x3e, r29	; 62
 170:	0f be       	out	0x3f, r0	; 63
 172:	cd bf       	out	0x3d, r28	; 61
 174:	8a 83       	std	Y+2, r24	; 0x02
 176:	6b 83       	std	Y+3, r22	; 0x03
 178:	4c 83       	std	Y+4, r20	; 0x04
    u8 Local_u8_ErrorState = SATE_OK;
 17a:	19 82       	std	Y+1, r1	; 0x01
    if((Copy_u8_PortId <= DIO_U8_PORTD) && (Copy_u8_PinId <= DIO_U8_PIN7) && ((Copy_u8_PinDirection == DIO_U8_OUTPUT)||(Copy_u8_PinDirection == DIO_U8_INPUT))){
 17c:	8a 81       	ldd	r24, Y+2	; 0x02
 17e:	84 30       	cpi	r24, 0x04	; 4
 180:	08 f0       	brcs	.+2      	; 0x184 <DIO_enu_SetPinDirection+0x24>
 182:	0c c1       	rjmp	.+536    	; 0x39c <DIO_enu_SetPinDirection+0x23c>
 184:	8b 81       	ldd	r24, Y+3	; 0x03
 186:	88 30       	cpi	r24, 0x08	; 8
 188:	08 f0       	brcs	.+2      	; 0x18c <DIO_enu_SetPinDirection+0x2c>
 18a:	08 c1       	rjmp	.+528    	; 0x39c <DIO_enu_SetPinDirection+0x23c>
 18c:	8c 81       	ldd	r24, Y+4	; 0x04
 18e:	81 30       	cpi	r24, 0x01	; 1
 190:	21 f0       	breq	.+8      	; 0x19a <DIO_enu_SetPinDirection+0x3a>
 192:	8c 81       	ldd	r24, Y+4	; 0x04
 194:	88 23       	and	r24, r24
 196:	09 f0       	breq	.+2      	; 0x19a <DIO_enu_SetPinDirection+0x3a>
 198:	01 c1       	rjmp	.+514    	; 0x39c <DIO_enu_SetPinDirection+0x23c>
        switch (Copy_u8_PortId)
 19a:	8a 81       	ldd	r24, Y+2	; 0x02
 19c:	28 2f       	mov	r18, r24
 19e:	30 e0       	ldi	r19, 0x00	; 0
 1a0:	3e 87       	std	Y+14, r19	; 0x0e
 1a2:	2d 87       	std	Y+13, r18	; 0x0d
 1a4:	8d 85       	ldd	r24, Y+13	; 0x0d
 1a6:	9e 85       	ldd	r25, Y+14	; 0x0e
 1a8:	81 30       	cpi	r24, 0x01	; 1
 1aa:	91 05       	cpc	r25, r1
 1ac:	09 f4       	brne	.+2      	; 0x1b0 <DIO_enu_SetPinDirection+0x50>
 1ae:	4f c0       	rjmp	.+158    	; 0x24e <DIO_enu_SetPinDirection+0xee>
 1b0:	2d 85       	ldd	r18, Y+13	; 0x0d
 1b2:	3e 85       	ldd	r19, Y+14	; 0x0e
 1b4:	22 30       	cpi	r18, 0x02	; 2
 1b6:	31 05       	cpc	r19, r1
 1b8:	2c f4       	brge	.+10     	; 0x1c4 <DIO_enu_SetPinDirection+0x64>
 1ba:	8d 85       	ldd	r24, Y+13	; 0x0d
 1bc:	9e 85       	ldd	r25, Y+14	; 0x0e
 1be:	00 97       	sbiw	r24, 0x00	; 0
 1c0:	71 f0       	breq	.+28     	; 0x1de <DIO_enu_SetPinDirection+0x7e>
 1c2:	ee c0       	rjmp	.+476    	; 0x3a0 <DIO_enu_SetPinDirection+0x240>
 1c4:	2d 85       	ldd	r18, Y+13	; 0x0d
 1c6:	3e 85       	ldd	r19, Y+14	; 0x0e
 1c8:	22 30       	cpi	r18, 0x02	; 2
 1ca:	31 05       	cpc	r19, r1
 1cc:	09 f4       	brne	.+2      	; 0x1d0 <DIO_enu_SetPinDirection+0x70>
 1ce:	77 c0       	rjmp	.+238    	; 0x2be <DIO_enu_SetPinDirection+0x15e>
 1d0:	8d 85       	ldd	r24, Y+13	; 0x0d
 1d2:	9e 85       	ldd	r25, Y+14	; 0x0e
 1d4:	83 30       	cpi	r24, 0x03	; 3
 1d6:	91 05       	cpc	r25, r1
 1d8:	09 f4       	brne	.+2      	; 0x1dc <DIO_enu_SetPinDirection+0x7c>
 1da:	a9 c0       	rjmp	.+338    	; 0x32e <DIO_enu_SetPinDirection+0x1ce>
 1dc:	e1 c0       	rjmp	.+450    	; 0x3a0 <DIO_enu_SetPinDirection+0x240>
        {
        case DIO_U8_PORTA:
            switch (Copy_u8_PinDirection)
 1de:	8c 81       	ldd	r24, Y+4	; 0x04
 1e0:	28 2f       	mov	r18, r24
 1e2:	30 e0       	ldi	r19, 0x00	; 0
 1e4:	3c 87       	std	Y+12, r19	; 0x0c
 1e6:	2b 87       	std	Y+11, r18	; 0x0b
 1e8:	8b 85       	ldd	r24, Y+11	; 0x0b
 1ea:	9c 85       	ldd	r25, Y+12	; 0x0c
 1ec:	00 97       	sbiw	r24, 0x00	; 0
 1ee:	d1 f0       	breq	.+52     	; 0x224 <DIO_enu_SetPinDirection+0xc4>
 1f0:	2b 85       	ldd	r18, Y+11	; 0x0b
 1f2:	3c 85       	ldd	r19, Y+12	; 0x0c
 1f4:	21 30       	cpi	r18, 0x01	; 1
 1f6:	31 05       	cpc	r19, r1
 1f8:	09 f0       	breq	.+2      	; 0x1fc <DIO_enu_SetPinDirection+0x9c>
 1fa:	d2 c0       	rjmp	.+420    	; 0x3a0 <DIO_enu_SetPinDirection+0x240>
            {
                case DIO_U8_OUTPUT:SET_BIT(DIO_U8_DDRA_REG,Copy_u8_PinId); break;
 1fc:	aa e3       	ldi	r26, 0x3A	; 58
 1fe:	b0 e0       	ldi	r27, 0x00	; 0
 200:	ea e3       	ldi	r30, 0x3A	; 58
 202:	f0 e0       	ldi	r31, 0x00	; 0
 204:	80 81       	ld	r24, Z
 206:	48 2f       	mov	r20, r24
 208:	8b 81       	ldd	r24, Y+3	; 0x03
 20a:	28 2f       	mov	r18, r24
 20c:	30 e0       	ldi	r19, 0x00	; 0
 20e:	81 e0       	ldi	r24, 0x01	; 1
 210:	90 e0       	ldi	r25, 0x00	; 0
 212:	02 2e       	mov	r0, r18
 214:	02 c0       	rjmp	.+4      	; 0x21a <DIO_enu_SetPinDirection+0xba>
 216:	88 0f       	add	r24, r24
 218:	99 1f       	adc	r25, r25
 21a:	0a 94       	dec	r0
 21c:	e2 f7       	brpl	.-8      	; 0x216 <DIO_enu_SetPinDirection+0xb6>
 21e:	84 2b       	or	r24, r20
 220:	8c 93       	st	X, r24
 222:	be c0       	rjmp	.+380    	; 0x3a0 <DIO_enu_SetPinDirection+0x240>
                case DIO_U8_INPUT: CLR_BIT(DIO_U8_DDRA_REG,Copy_u8_PinId); break; 
 224:	aa e3       	ldi	r26, 0x3A	; 58
 226:	b0 e0       	ldi	r27, 0x00	; 0
 228:	ea e3       	ldi	r30, 0x3A	; 58
 22a:	f0 e0       	ldi	r31, 0x00	; 0
 22c:	80 81       	ld	r24, Z
 22e:	48 2f       	mov	r20, r24
 230:	8b 81       	ldd	r24, Y+3	; 0x03
 232:	28 2f       	mov	r18, r24
 234:	30 e0       	ldi	r19, 0x00	; 0
 236:	81 e0       	ldi	r24, 0x01	; 1
 238:	90 e0       	ldi	r25, 0x00	; 0
 23a:	02 2e       	mov	r0, r18
 23c:	02 c0       	rjmp	.+4      	; 0x242 <DIO_enu_SetPinDirection+0xe2>
 23e:	88 0f       	add	r24, r24
 240:	99 1f       	adc	r25, r25
 242:	0a 94       	dec	r0
 244:	e2 f7       	brpl	.-8      	; 0x23e <DIO_enu_SetPinDirection+0xde>
 246:	80 95       	com	r24
 248:	84 23       	and	r24, r20
 24a:	8c 93       	st	X, r24
 24c:	a9 c0       	rjmp	.+338    	; 0x3a0 <DIO_enu_SetPinDirection+0x240>
            }
        break;
        case DIO_U8_PORTB:
            switch (Copy_u8_PinDirection)
 24e:	8c 81       	ldd	r24, Y+4	; 0x04
 250:	28 2f       	mov	r18, r24
 252:	30 e0       	ldi	r19, 0x00	; 0
 254:	3a 87       	std	Y+10, r19	; 0x0a
 256:	29 87       	std	Y+9, r18	; 0x09
 258:	89 85       	ldd	r24, Y+9	; 0x09
 25a:	9a 85       	ldd	r25, Y+10	; 0x0a
 25c:	00 97       	sbiw	r24, 0x00	; 0
 25e:	d1 f0       	breq	.+52     	; 0x294 <DIO_enu_SetPinDirection+0x134>
 260:	29 85       	ldd	r18, Y+9	; 0x09
 262:	3a 85       	ldd	r19, Y+10	; 0x0a
 264:	21 30       	cpi	r18, 0x01	; 1
 266:	31 05       	cpc	r19, r1
 268:	09 f0       	breq	.+2      	; 0x26c <DIO_enu_SetPinDirection+0x10c>
 26a:	9a c0       	rjmp	.+308    	; 0x3a0 <DIO_enu_SetPinDirection+0x240>
            {
                case DIO_U8_OUTPUT:SET_BIT(DIO_U8_DDRB_REG,Copy_u8_PinId); break;
 26c:	a7 e3       	ldi	r26, 0x37	; 55
 26e:	b0 e0       	ldi	r27, 0x00	; 0
 270:	e7 e3       	ldi	r30, 0x37	; 55
 272:	f0 e0       	ldi	r31, 0x00	; 0
 274:	80 81       	ld	r24, Z
 276:	48 2f       	mov	r20, r24
 278:	8b 81       	ldd	r24, Y+3	; 0x03
 27a:	28 2f       	mov	r18, r24
 27c:	30 e0       	ldi	r19, 0x00	; 0
 27e:	81 e0       	ldi	r24, 0x01	; 1
 280:	90 e0       	ldi	r25, 0x00	; 0
 282:	02 2e       	mov	r0, r18
 284:	02 c0       	rjmp	.+4      	; 0x28a <DIO_enu_SetPinDirection+0x12a>
 286:	88 0f       	add	r24, r24
 288:	99 1f       	adc	r25, r25
 28a:	0a 94       	dec	r0
 28c:	e2 f7       	brpl	.-8      	; 0x286 <DIO_enu_SetPinDirection+0x126>
 28e:	84 2b       	or	r24, r20
 290:	8c 93       	st	X, r24
 292:	86 c0       	rjmp	.+268    	; 0x3a0 <DIO_enu_SetPinDirection+0x240>
                case DIO_U8_INPUT: CLR_BIT(DIO_U8_DDRB_REG,Copy_u8_PinId); break; 
 294:	a7 e3       	ldi	r26, 0x37	; 55
 296:	b0 e0       	ldi	r27, 0x00	; 0
 298:	e7 e3       	ldi	r30, 0x37	; 55
 29a:	f0 e0       	ldi	r31, 0x00	; 0
 29c:	80 81       	ld	r24, Z
 29e:	48 2f       	mov	r20, r24
 2a0:	8b 81       	ldd	r24, Y+3	; 0x03
 2a2:	28 2f       	mov	r18, r24
 2a4:	30 e0       	ldi	r19, 0x00	; 0
 2a6:	81 e0       	ldi	r24, 0x01	; 1
 2a8:	90 e0       	ldi	r25, 0x00	; 0
 2aa:	02 2e       	mov	r0, r18
 2ac:	02 c0       	rjmp	.+4      	; 0x2b2 <DIO_enu_SetPinDirection+0x152>
 2ae:	88 0f       	add	r24, r24
 2b0:	99 1f       	adc	r25, r25
 2b2:	0a 94       	dec	r0
 2b4:	e2 f7       	brpl	.-8      	; 0x2ae <DIO_enu_SetPinDirection+0x14e>
 2b6:	80 95       	com	r24
 2b8:	84 23       	and	r24, r20
 2ba:	8c 93       	st	X, r24
 2bc:	71 c0       	rjmp	.+226    	; 0x3a0 <DIO_enu_SetPinDirection+0x240>
            }
        break;
        case DIO_U8_PORTC:
            switch (Copy_u8_PinDirection)
 2be:	8c 81       	ldd	r24, Y+4	; 0x04
 2c0:	28 2f       	mov	r18, r24
 2c2:	30 e0       	ldi	r19, 0x00	; 0
 2c4:	38 87       	std	Y+8, r19	; 0x08
 2c6:	2f 83       	std	Y+7, r18	; 0x07
 2c8:	8f 81       	ldd	r24, Y+7	; 0x07
 2ca:	98 85       	ldd	r25, Y+8	; 0x08
 2cc:	00 97       	sbiw	r24, 0x00	; 0
 2ce:	d1 f0       	breq	.+52     	; 0x304 <DIO_enu_SetPinDirection+0x1a4>
 2d0:	2f 81       	ldd	r18, Y+7	; 0x07
 2d2:	38 85       	ldd	r19, Y+8	; 0x08
 2d4:	21 30       	cpi	r18, 0x01	; 1
 2d6:	31 05       	cpc	r19, r1
 2d8:	09 f0       	breq	.+2      	; 0x2dc <DIO_enu_SetPinDirection+0x17c>
 2da:	62 c0       	rjmp	.+196    	; 0x3a0 <DIO_enu_SetPinDirection+0x240>
            {
                case DIO_U8_OUTPUT:SET_BIT(DIO_U8_DDRC_REG,Copy_u8_PinId); break;
 2dc:	a4 e3       	ldi	r26, 0x34	; 52
 2de:	b0 e0       	ldi	r27, 0x00	; 0
 2e0:	e4 e3       	ldi	r30, 0x34	; 52
 2e2:	f0 e0       	ldi	r31, 0x00	; 0
 2e4:	80 81       	ld	r24, Z
 2e6:	48 2f       	mov	r20, r24
 2e8:	8b 81       	ldd	r24, Y+3	; 0x03
 2ea:	28 2f       	mov	r18, r24
 2ec:	30 e0       	ldi	r19, 0x00	; 0
 2ee:	81 e0       	ldi	r24, 0x01	; 1
 2f0:	90 e0       	ldi	r25, 0x00	; 0
 2f2:	02 2e       	mov	r0, r18
 2f4:	02 c0       	rjmp	.+4      	; 0x2fa <DIO_enu_SetPinDirection+0x19a>
 2f6:	88 0f       	add	r24, r24
 2f8:	99 1f       	adc	r25, r25
 2fa:	0a 94       	dec	r0
 2fc:	e2 f7       	brpl	.-8      	; 0x2f6 <DIO_enu_SetPinDirection+0x196>
 2fe:	84 2b       	or	r24, r20
 300:	8c 93       	st	X, r24
 302:	4e c0       	rjmp	.+156    	; 0x3a0 <DIO_enu_SetPinDirection+0x240>
                case DIO_U8_INPUT: CLR_BIT(DIO_U8_DDRC_REG,Copy_u8_PinId); break; 
 304:	a4 e3       	ldi	r26, 0x34	; 52
 306:	b0 e0       	ldi	r27, 0x00	; 0
 308:	e4 e3       	ldi	r30, 0x34	; 52
 30a:	f0 e0       	ldi	r31, 0x00	; 0
 30c:	80 81       	ld	r24, Z
 30e:	48 2f       	mov	r20, r24
 310:	8b 81       	ldd	r24, Y+3	; 0x03
 312:	28 2f       	mov	r18, r24
 314:	30 e0       	ldi	r19, 0x00	; 0
 316:	81 e0       	ldi	r24, 0x01	; 1
 318:	90 e0       	ldi	r25, 0x00	; 0
 31a:	02 2e       	mov	r0, r18
 31c:	02 c0       	rjmp	.+4      	; 0x322 <DIO_enu_SetPinDirection+0x1c2>
 31e:	88 0f       	add	r24, r24
 320:	99 1f       	adc	r25, r25
 322:	0a 94       	dec	r0
 324:	e2 f7       	brpl	.-8      	; 0x31e <DIO_enu_SetPinDirection+0x1be>
 326:	80 95       	com	r24
 328:	84 23       	and	r24, r20
 32a:	8c 93       	st	X, r24
 32c:	39 c0       	rjmp	.+114    	; 0x3a0 <DIO_enu_SetPinDirection+0x240>
            } 
        break;
        case DIO_U8_PORTD:
            switch (Copy_u8_PinDirection)
 32e:	8c 81       	ldd	r24, Y+4	; 0x04
 330:	28 2f       	mov	r18, r24
 332:	30 e0       	ldi	r19, 0x00	; 0
 334:	3e 83       	std	Y+6, r19	; 0x06
 336:	2d 83       	std	Y+5, r18	; 0x05
 338:	8d 81       	ldd	r24, Y+5	; 0x05
 33a:	9e 81       	ldd	r25, Y+6	; 0x06
 33c:	00 97       	sbiw	r24, 0x00	; 0
 33e:	c9 f0       	breq	.+50     	; 0x372 <DIO_enu_SetPinDirection+0x212>
 340:	2d 81       	ldd	r18, Y+5	; 0x05
 342:	3e 81       	ldd	r19, Y+6	; 0x06
 344:	21 30       	cpi	r18, 0x01	; 1
 346:	31 05       	cpc	r19, r1
 348:	59 f5       	brne	.+86     	; 0x3a0 <DIO_enu_SetPinDirection+0x240>
            {
                case DIO_U8_OUTPUT:SET_BIT(DIO_U8_DDRD_REG,Copy_u8_PinId); break;
 34a:	a1 e3       	ldi	r26, 0x31	; 49
 34c:	b0 e0       	ldi	r27, 0x00	; 0
 34e:	e1 e3       	ldi	r30, 0x31	; 49
 350:	f0 e0       	ldi	r31, 0x00	; 0
 352:	80 81       	ld	r24, Z
 354:	48 2f       	mov	r20, r24
 356:	8b 81       	ldd	r24, Y+3	; 0x03
 358:	28 2f       	mov	r18, r24
 35a:	30 e0       	ldi	r19, 0x00	; 0
 35c:	81 e0       	ldi	r24, 0x01	; 1
 35e:	90 e0       	ldi	r25, 0x00	; 0
 360:	02 2e       	mov	r0, r18
 362:	02 c0       	rjmp	.+4      	; 0x368 <DIO_enu_SetPinDirection+0x208>
 364:	88 0f       	add	r24, r24
 366:	99 1f       	adc	r25, r25
 368:	0a 94       	dec	r0
 36a:	e2 f7       	brpl	.-8      	; 0x364 <DIO_enu_SetPinDirection+0x204>
 36c:	84 2b       	or	r24, r20
 36e:	8c 93       	st	X, r24
 370:	17 c0       	rjmp	.+46     	; 0x3a0 <DIO_enu_SetPinDirection+0x240>
                case DIO_U8_INPUT: CLR_BIT(DIO_U8_DDRD_REG,Copy_u8_PinId); break; 
 372:	a1 e3       	ldi	r26, 0x31	; 49
 374:	b0 e0       	ldi	r27, 0x00	; 0
 376:	e1 e3       	ldi	r30, 0x31	; 49
 378:	f0 e0       	ldi	r31, 0x00	; 0
 37a:	80 81       	ld	r24, Z
 37c:	48 2f       	mov	r20, r24
 37e:	8b 81       	ldd	r24, Y+3	; 0x03
 380:	28 2f       	mov	r18, r24
 382:	30 e0       	ldi	r19, 0x00	; 0
 384:	81 e0       	ldi	r24, 0x01	; 1
 386:	90 e0       	ldi	r25, 0x00	; 0
 388:	02 2e       	mov	r0, r18
 38a:	02 c0       	rjmp	.+4      	; 0x390 <DIO_enu_SetPinDirection+0x230>
 38c:	88 0f       	add	r24, r24
 38e:	99 1f       	adc	r25, r25
 390:	0a 94       	dec	r0
 392:	e2 f7       	brpl	.-8      	; 0x38c <DIO_enu_SetPinDirection+0x22c>
 394:	80 95       	com	r24
 396:	84 23       	and	r24, r20
 398:	8c 93       	st	X, r24
 39a:	02 c0       	rjmp	.+4      	; 0x3a0 <DIO_enu_SetPinDirection+0x240>
        break;
        }
    }
    else
    {
        Local_u8_ErrorState = SATE_NOT_OK;
 39c:	81 e0       	ldi	r24, 0x01	; 1
 39e:	89 83       	std	Y+1, r24	; 0x01
    }
    return Local_u8_ErrorState;
 3a0:	89 81       	ldd	r24, Y+1	; 0x01
}
 3a2:	2e 96       	adiw	r28, 0x0e	; 14
 3a4:	0f b6       	in	r0, 0x3f	; 63
 3a6:	f8 94       	cli
 3a8:	de bf       	out	0x3e, r29	; 62
 3aa:	0f be       	out	0x3f, r0	; 63
 3ac:	cd bf       	out	0x3d, r28	; 61
 3ae:	cf 91       	pop	r28
 3b0:	df 91       	pop	r29
 3b2:	08 95       	ret

000003b4 <DIO_enu_SetPinValue>:

ES_t DIO_enu_SetPinValue(u8 Copy_u8_PortId, u8 Copy_u8_PinId,u8 Copy_u8_PinValue){
 3b4:	df 93       	push	r29
 3b6:	cf 93       	push	r28
 3b8:	cd b7       	in	r28, 0x3d	; 61
 3ba:	de b7       	in	r29, 0x3e	; 62
 3bc:	2e 97       	sbiw	r28, 0x0e	; 14
 3be:	0f b6       	in	r0, 0x3f	; 63
 3c0:	f8 94       	cli
 3c2:	de bf       	out	0x3e, r29	; 62
 3c4:	0f be       	out	0x3f, r0	; 63
 3c6:	cd bf       	out	0x3d, r28	; 61
 3c8:	8a 83       	std	Y+2, r24	; 0x02
 3ca:	6b 83       	std	Y+3, r22	; 0x03
 3cc:	4c 83       	std	Y+4, r20	; 0x04
    u8 Local_u8_ErrorState = SATE_OK;
 3ce:	19 82       	std	Y+1, r1	; 0x01
    if((Copy_u8_PortId <= DIO_U8_PORTD) && (Copy_u8_PinId <= DIO_U8_PIN7) && ((Copy_u8_PinValue == DIO_U8_HIGH)||(Copy_u8_PinValue == DIO_U8_LOW))){
 3d0:	8a 81       	ldd	r24, Y+2	; 0x02
 3d2:	84 30       	cpi	r24, 0x04	; 4
 3d4:	08 f0       	brcs	.+2      	; 0x3d8 <DIO_enu_SetPinValue+0x24>
 3d6:	0c c1       	rjmp	.+536    	; 0x5f0 <DIO_enu_SetPinValue+0x23c>
 3d8:	8b 81       	ldd	r24, Y+3	; 0x03
 3da:	88 30       	cpi	r24, 0x08	; 8
 3dc:	08 f0       	brcs	.+2      	; 0x3e0 <DIO_enu_SetPinValue+0x2c>
 3de:	08 c1       	rjmp	.+528    	; 0x5f0 <DIO_enu_SetPinValue+0x23c>
 3e0:	8c 81       	ldd	r24, Y+4	; 0x04
 3e2:	81 30       	cpi	r24, 0x01	; 1
 3e4:	21 f0       	breq	.+8      	; 0x3ee <DIO_enu_SetPinValue+0x3a>
 3e6:	8c 81       	ldd	r24, Y+4	; 0x04
 3e8:	88 23       	and	r24, r24
 3ea:	09 f0       	breq	.+2      	; 0x3ee <DIO_enu_SetPinValue+0x3a>
 3ec:	01 c1       	rjmp	.+514    	; 0x5f0 <DIO_enu_SetPinValue+0x23c>
        switch (Copy_u8_PortId)
 3ee:	8a 81       	ldd	r24, Y+2	; 0x02
 3f0:	28 2f       	mov	r18, r24
 3f2:	30 e0       	ldi	r19, 0x00	; 0
 3f4:	3e 87       	std	Y+14, r19	; 0x0e
 3f6:	2d 87       	std	Y+13, r18	; 0x0d
 3f8:	8d 85       	ldd	r24, Y+13	; 0x0d
 3fa:	9e 85       	ldd	r25, Y+14	; 0x0e
 3fc:	81 30       	cpi	r24, 0x01	; 1
 3fe:	91 05       	cpc	r25, r1
 400:	09 f4       	brne	.+2      	; 0x404 <DIO_enu_SetPinValue+0x50>
 402:	4f c0       	rjmp	.+158    	; 0x4a2 <DIO_enu_SetPinValue+0xee>
 404:	2d 85       	ldd	r18, Y+13	; 0x0d
 406:	3e 85       	ldd	r19, Y+14	; 0x0e
 408:	22 30       	cpi	r18, 0x02	; 2
 40a:	31 05       	cpc	r19, r1
 40c:	2c f4       	brge	.+10     	; 0x418 <DIO_enu_SetPinValue+0x64>
 40e:	8d 85       	ldd	r24, Y+13	; 0x0d
 410:	9e 85       	ldd	r25, Y+14	; 0x0e
 412:	00 97       	sbiw	r24, 0x00	; 0
 414:	71 f0       	breq	.+28     	; 0x432 <DIO_enu_SetPinValue+0x7e>
 416:	ee c0       	rjmp	.+476    	; 0x5f4 <DIO_enu_SetPinValue+0x240>
 418:	2d 85       	ldd	r18, Y+13	; 0x0d
 41a:	3e 85       	ldd	r19, Y+14	; 0x0e
 41c:	22 30       	cpi	r18, 0x02	; 2
 41e:	31 05       	cpc	r19, r1
 420:	09 f4       	brne	.+2      	; 0x424 <DIO_enu_SetPinValue+0x70>
 422:	77 c0       	rjmp	.+238    	; 0x512 <DIO_enu_SetPinValue+0x15e>
 424:	8d 85       	ldd	r24, Y+13	; 0x0d
 426:	9e 85       	ldd	r25, Y+14	; 0x0e
 428:	83 30       	cpi	r24, 0x03	; 3
 42a:	91 05       	cpc	r25, r1
 42c:	09 f4       	brne	.+2      	; 0x430 <DIO_enu_SetPinValue+0x7c>
 42e:	a9 c0       	rjmp	.+338    	; 0x582 <DIO_enu_SetPinValue+0x1ce>
 430:	e1 c0       	rjmp	.+450    	; 0x5f4 <DIO_enu_SetPinValue+0x240>
        {
        case DIO_U8_PORTA:
            switch (Copy_u8_PinValue)
 432:	8c 81       	ldd	r24, Y+4	; 0x04
 434:	28 2f       	mov	r18, r24
 436:	30 e0       	ldi	r19, 0x00	; 0
 438:	3c 87       	std	Y+12, r19	; 0x0c
 43a:	2b 87       	std	Y+11, r18	; 0x0b
 43c:	8b 85       	ldd	r24, Y+11	; 0x0b
 43e:	9c 85       	ldd	r25, Y+12	; 0x0c
 440:	00 97       	sbiw	r24, 0x00	; 0
 442:	d1 f0       	breq	.+52     	; 0x478 <DIO_enu_SetPinValue+0xc4>
 444:	2b 85       	ldd	r18, Y+11	; 0x0b
 446:	3c 85       	ldd	r19, Y+12	; 0x0c
 448:	21 30       	cpi	r18, 0x01	; 1
 44a:	31 05       	cpc	r19, r1
 44c:	09 f0       	breq	.+2      	; 0x450 <DIO_enu_SetPinValue+0x9c>
 44e:	d2 c0       	rjmp	.+420    	; 0x5f4 <DIO_enu_SetPinValue+0x240>
            {
                case DIO_U8_HIGH:SET_BIT(DIO_U8_PORTA_REG,Copy_u8_PinId); break;
 450:	ab e3       	ldi	r26, 0x3B	; 59
 452:	b0 e0       	ldi	r27, 0x00	; 0
 454:	eb e3       	ldi	r30, 0x3B	; 59
 456:	f0 e0       	ldi	r31, 0x00	; 0
 458:	80 81       	ld	r24, Z
 45a:	48 2f       	mov	r20, r24
 45c:	8b 81       	ldd	r24, Y+3	; 0x03
 45e:	28 2f       	mov	r18, r24
 460:	30 e0       	ldi	r19, 0x00	; 0
 462:	81 e0       	ldi	r24, 0x01	; 1
 464:	90 e0       	ldi	r25, 0x00	; 0
 466:	02 2e       	mov	r0, r18
 468:	02 c0       	rjmp	.+4      	; 0x46e <DIO_enu_SetPinValue+0xba>
 46a:	88 0f       	add	r24, r24
 46c:	99 1f       	adc	r25, r25
 46e:	0a 94       	dec	r0
 470:	e2 f7       	brpl	.-8      	; 0x46a <DIO_enu_SetPinValue+0xb6>
 472:	84 2b       	or	r24, r20
 474:	8c 93       	st	X, r24
 476:	be c0       	rjmp	.+380    	; 0x5f4 <DIO_enu_SetPinValue+0x240>
                case DIO_U8_LOW: CLR_BIT(DIO_U8_PORTA_REG,Copy_u8_PinId); break; 
 478:	ab e3       	ldi	r26, 0x3B	; 59
 47a:	b0 e0       	ldi	r27, 0x00	; 0
 47c:	eb e3       	ldi	r30, 0x3B	; 59
 47e:	f0 e0       	ldi	r31, 0x00	; 0
 480:	80 81       	ld	r24, Z
 482:	48 2f       	mov	r20, r24
 484:	8b 81       	ldd	r24, Y+3	; 0x03
 486:	28 2f       	mov	r18, r24
 488:	30 e0       	ldi	r19, 0x00	; 0
 48a:	81 e0       	ldi	r24, 0x01	; 1
 48c:	90 e0       	ldi	r25, 0x00	; 0
 48e:	02 2e       	mov	r0, r18
 490:	02 c0       	rjmp	.+4      	; 0x496 <DIO_enu_SetPinValue+0xe2>
 492:	88 0f       	add	r24, r24
 494:	99 1f       	adc	r25, r25
 496:	0a 94       	dec	r0
 498:	e2 f7       	brpl	.-8      	; 0x492 <DIO_enu_SetPinValue+0xde>
 49a:	80 95       	com	r24
 49c:	84 23       	and	r24, r20
 49e:	8c 93       	st	X, r24
 4a0:	a9 c0       	rjmp	.+338    	; 0x5f4 <DIO_enu_SetPinValue+0x240>
            }
        break;
        case DIO_U8_PORTB:
            switch (Copy_u8_PinValue)
 4a2:	8c 81       	ldd	r24, Y+4	; 0x04
 4a4:	28 2f       	mov	r18, r24
 4a6:	30 e0       	ldi	r19, 0x00	; 0
 4a8:	3a 87       	std	Y+10, r19	; 0x0a
 4aa:	29 87       	std	Y+9, r18	; 0x09
 4ac:	89 85       	ldd	r24, Y+9	; 0x09
 4ae:	9a 85       	ldd	r25, Y+10	; 0x0a
 4b0:	00 97       	sbiw	r24, 0x00	; 0
 4b2:	d1 f0       	breq	.+52     	; 0x4e8 <DIO_enu_SetPinValue+0x134>
 4b4:	29 85       	ldd	r18, Y+9	; 0x09
 4b6:	3a 85       	ldd	r19, Y+10	; 0x0a
 4b8:	21 30       	cpi	r18, 0x01	; 1
 4ba:	31 05       	cpc	r19, r1
 4bc:	09 f0       	breq	.+2      	; 0x4c0 <DIO_enu_SetPinValue+0x10c>
 4be:	9a c0       	rjmp	.+308    	; 0x5f4 <DIO_enu_SetPinValue+0x240>
            {
                case DIO_U8_HIGH:SET_BIT(DIO_U8_PORTB_REG,Copy_u8_PinId); break;
 4c0:	a8 e3       	ldi	r26, 0x38	; 56
 4c2:	b0 e0       	ldi	r27, 0x00	; 0
 4c4:	e8 e3       	ldi	r30, 0x38	; 56
 4c6:	f0 e0       	ldi	r31, 0x00	; 0
 4c8:	80 81       	ld	r24, Z
 4ca:	48 2f       	mov	r20, r24
 4cc:	8b 81       	ldd	r24, Y+3	; 0x03
 4ce:	28 2f       	mov	r18, r24
 4d0:	30 e0       	ldi	r19, 0x00	; 0
 4d2:	81 e0       	ldi	r24, 0x01	; 1
 4d4:	90 e0       	ldi	r25, 0x00	; 0
 4d6:	02 2e       	mov	r0, r18
 4d8:	02 c0       	rjmp	.+4      	; 0x4de <DIO_enu_SetPinValue+0x12a>
 4da:	88 0f       	add	r24, r24
 4dc:	99 1f       	adc	r25, r25
 4de:	0a 94       	dec	r0
 4e0:	e2 f7       	brpl	.-8      	; 0x4da <DIO_enu_SetPinValue+0x126>
 4e2:	84 2b       	or	r24, r20
 4e4:	8c 93       	st	X, r24
 4e6:	86 c0       	rjmp	.+268    	; 0x5f4 <DIO_enu_SetPinValue+0x240>
                case DIO_U8_LOW: CLR_BIT(DIO_U8_PORTB_REG,Copy_u8_PinId); break; 
 4e8:	a8 e3       	ldi	r26, 0x38	; 56
 4ea:	b0 e0       	ldi	r27, 0x00	; 0
 4ec:	e8 e3       	ldi	r30, 0x38	; 56
 4ee:	f0 e0       	ldi	r31, 0x00	; 0
 4f0:	80 81       	ld	r24, Z
 4f2:	48 2f       	mov	r20, r24
 4f4:	8b 81       	ldd	r24, Y+3	; 0x03
 4f6:	28 2f       	mov	r18, r24
 4f8:	30 e0       	ldi	r19, 0x00	; 0
 4fa:	81 e0       	ldi	r24, 0x01	; 1
 4fc:	90 e0       	ldi	r25, 0x00	; 0
 4fe:	02 2e       	mov	r0, r18
 500:	02 c0       	rjmp	.+4      	; 0x506 <DIO_enu_SetPinValue+0x152>
 502:	88 0f       	add	r24, r24
 504:	99 1f       	adc	r25, r25
 506:	0a 94       	dec	r0
 508:	e2 f7       	brpl	.-8      	; 0x502 <DIO_enu_SetPinValue+0x14e>
 50a:	80 95       	com	r24
 50c:	84 23       	and	r24, r20
 50e:	8c 93       	st	X, r24
 510:	71 c0       	rjmp	.+226    	; 0x5f4 <DIO_enu_SetPinValue+0x240>
            }
        break;
        case DIO_U8_PORTC:
            switch (Copy_u8_PinValue)
 512:	8c 81       	ldd	r24, Y+4	; 0x04
 514:	28 2f       	mov	r18, r24
 516:	30 e0       	ldi	r19, 0x00	; 0
 518:	38 87       	std	Y+8, r19	; 0x08
 51a:	2f 83       	std	Y+7, r18	; 0x07
 51c:	8f 81       	ldd	r24, Y+7	; 0x07
 51e:	98 85       	ldd	r25, Y+8	; 0x08
 520:	00 97       	sbiw	r24, 0x00	; 0
 522:	d1 f0       	breq	.+52     	; 0x558 <DIO_enu_SetPinValue+0x1a4>
 524:	2f 81       	ldd	r18, Y+7	; 0x07
 526:	38 85       	ldd	r19, Y+8	; 0x08
 528:	21 30       	cpi	r18, 0x01	; 1
 52a:	31 05       	cpc	r19, r1
 52c:	09 f0       	breq	.+2      	; 0x530 <DIO_enu_SetPinValue+0x17c>
 52e:	62 c0       	rjmp	.+196    	; 0x5f4 <DIO_enu_SetPinValue+0x240>
            {
                case DIO_U8_HIGH:SET_BIT(DIO_U8_PORTC_REG,Copy_u8_PinId); break;
 530:	a5 e3       	ldi	r26, 0x35	; 53
 532:	b0 e0       	ldi	r27, 0x00	; 0
 534:	e5 e3       	ldi	r30, 0x35	; 53
 536:	f0 e0       	ldi	r31, 0x00	; 0
 538:	80 81       	ld	r24, Z
 53a:	48 2f       	mov	r20, r24
 53c:	8b 81       	ldd	r24, Y+3	; 0x03
 53e:	28 2f       	mov	r18, r24
 540:	30 e0       	ldi	r19, 0x00	; 0
 542:	81 e0       	ldi	r24, 0x01	; 1
 544:	90 e0       	ldi	r25, 0x00	; 0
 546:	02 2e       	mov	r0, r18
 548:	02 c0       	rjmp	.+4      	; 0x54e <DIO_enu_SetPinValue+0x19a>
 54a:	88 0f       	add	r24, r24
 54c:	99 1f       	adc	r25, r25
 54e:	0a 94       	dec	r0
 550:	e2 f7       	brpl	.-8      	; 0x54a <DIO_enu_SetPinValue+0x196>
 552:	84 2b       	or	r24, r20
 554:	8c 93       	st	X, r24
 556:	4e c0       	rjmp	.+156    	; 0x5f4 <DIO_enu_SetPinValue+0x240>
                case DIO_U8_LOW: CLR_BIT(DIO_U8_PORTC_REG,Copy_u8_PinId); break; 
 558:	a5 e3       	ldi	r26, 0x35	; 53
 55a:	b0 e0       	ldi	r27, 0x00	; 0
 55c:	e5 e3       	ldi	r30, 0x35	; 53
 55e:	f0 e0       	ldi	r31, 0x00	; 0
 560:	80 81       	ld	r24, Z
 562:	48 2f       	mov	r20, r24
 564:	8b 81       	ldd	r24, Y+3	; 0x03
 566:	28 2f       	mov	r18, r24
 568:	30 e0       	ldi	r19, 0x00	; 0
 56a:	81 e0       	ldi	r24, 0x01	; 1
 56c:	90 e0       	ldi	r25, 0x00	; 0
 56e:	02 2e       	mov	r0, r18
 570:	02 c0       	rjmp	.+4      	; 0x576 <DIO_enu_SetPinValue+0x1c2>
 572:	88 0f       	add	r24, r24
 574:	99 1f       	adc	r25, r25
 576:	0a 94       	dec	r0
 578:	e2 f7       	brpl	.-8      	; 0x572 <DIO_enu_SetPinValue+0x1be>
 57a:	80 95       	com	r24
 57c:	84 23       	and	r24, r20
 57e:	8c 93       	st	X, r24
 580:	39 c0       	rjmp	.+114    	; 0x5f4 <DIO_enu_SetPinValue+0x240>
            } 
        break;
        case DIO_U8_PORTD:
            switch (Copy_u8_PinValue)
 582:	8c 81       	ldd	r24, Y+4	; 0x04
 584:	28 2f       	mov	r18, r24
 586:	30 e0       	ldi	r19, 0x00	; 0
 588:	3e 83       	std	Y+6, r19	; 0x06
 58a:	2d 83       	std	Y+5, r18	; 0x05
 58c:	8d 81       	ldd	r24, Y+5	; 0x05
 58e:	9e 81       	ldd	r25, Y+6	; 0x06
 590:	00 97       	sbiw	r24, 0x00	; 0
 592:	c9 f0       	breq	.+50     	; 0x5c6 <DIO_enu_SetPinValue+0x212>
 594:	2d 81       	ldd	r18, Y+5	; 0x05
 596:	3e 81       	ldd	r19, Y+6	; 0x06
 598:	21 30       	cpi	r18, 0x01	; 1
 59a:	31 05       	cpc	r19, r1
 59c:	59 f5       	brne	.+86     	; 0x5f4 <DIO_enu_SetPinValue+0x240>
            {
                case DIO_U8_HIGH:SET_BIT(DIO_U8_PORTD_REG,Copy_u8_PinId); break;
 59e:	a2 e3       	ldi	r26, 0x32	; 50
 5a0:	b0 e0       	ldi	r27, 0x00	; 0
 5a2:	e2 e3       	ldi	r30, 0x32	; 50
 5a4:	f0 e0       	ldi	r31, 0x00	; 0
 5a6:	80 81       	ld	r24, Z
 5a8:	48 2f       	mov	r20, r24
 5aa:	8b 81       	ldd	r24, Y+3	; 0x03
 5ac:	28 2f       	mov	r18, r24
 5ae:	30 e0       	ldi	r19, 0x00	; 0
 5b0:	81 e0       	ldi	r24, 0x01	; 1
 5b2:	90 e0       	ldi	r25, 0x00	; 0
 5b4:	02 2e       	mov	r0, r18
 5b6:	02 c0       	rjmp	.+4      	; 0x5bc <DIO_enu_SetPinValue+0x208>
 5b8:	88 0f       	add	r24, r24
 5ba:	99 1f       	adc	r25, r25
 5bc:	0a 94       	dec	r0
 5be:	e2 f7       	brpl	.-8      	; 0x5b8 <DIO_enu_SetPinValue+0x204>
 5c0:	84 2b       	or	r24, r20
 5c2:	8c 93       	st	X, r24
 5c4:	17 c0       	rjmp	.+46     	; 0x5f4 <DIO_enu_SetPinValue+0x240>
                case DIO_U8_LOW: CLR_BIT(DIO_U8_PORTD_REG,Copy_u8_PinId); break; 
 5c6:	a2 e3       	ldi	r26, 0x32	; 50
 5c8:	b0 e0       	ldi	r27, 0x00	; 0
 5ca:	e2 e3       	ldi	r30, 0x32	; 50
 5cc:	f0 e0       	ldi	r31, 0x00	; 0
 5ce:	80 81       	ld	r24, Z
 5d0:	48 2f       	mov	r20, r24
 5d2:	8b 81       	ldd	r24, Y+3	; 0x03
 5d4:	28 2f       	mov	r18, r24
 5d6:	30 e0       	ldi	r19, 0x00	; 0
 5d8:	81 e0       	ldi	r24, 0x01	; 1
 5da:	90 e0       	ldi	r25, 0x00	; 0
 5dc:	02 2e       	mov	r0, r18
 5de:	02 c0       	rjmp	.+4      	; 0x5e4 <DIO_enu_SetPinValue+0x230>
 5e0:	88 0f       	add	r24, r24
 5e2:	99 1f       	adc	r25, r25
 5e4:	0a 94       	dec	r0
 5e6:	e2 f7       	brpl	.-8      	; 0x5e0 <DIO_enu_SetPinValue+0x22c>
 5e8:	80 95       	com	r24
 5ea:	84 23       	and	r24, r20
 5ec:	8c 93       	st	X, r24
 5ee:	02 c0       	rjmp	.+4      	; 0x5f4 <DIO_enu_SetPinValue+0x240>
        break;
        }
    }
    else
    {
        Local_u8_ErrorState = SATE_NOT_OK;
 5f0:	81 e0       	ldi	r24, 0x01	; 1
 5f2:	89 83       	std	Y+1, r24	; 0x01
    }
    return Local_u8_ErrorState;
 5f4:	89 81       	ldd	r24, Y+1	; 0x01
}
 5f6:	2e 96       	adiw	r28, 0x0e	; 14
 5f8:	0f b6       	in	r0, 0x3f	; 63
 5fa:	f8 94       	cli
 5fc:	de bf       	out	0x3e, r29	; 62
 5fe:	0f be       	out	0x3f, r0	; 63
 600:	cd bf       	out	0x3d, r28	; 61
 602:	cf 91       	pop	r28
 604:	df 91       	pop	r29
 606:	08 95       	ret

00000608 <DIO_enu_GetPinValue>:

ES_t DIO_enu_GetPinValue(u8 Copy_u8_PortId, u8 Copy_u8_PinId,u8 * Copy_pu8_ReturnPinValue){
 608:	df 93       	push	r29
 60a:	cf 93       	push	r28
 60c:	cd b7       	in	r28, 0x3d	; 61
 60e:	de b7       	in	r29, 0x3e	; 62
 610:	28 97       	sbiw	r28, 0x08	; 8
 612:	0f b6       	in	r0, 0x3f	; 63
 614:	f8 94       	cli
 616:	de bf       	out	0x3e, r29	; 62
 618:	0f be       	out	0x3f, r0	; 63
 61a:	cd bf       	out	0x3d, r28	; 61
 61c:	8b 83       	std	Y+3, r24	; 0x03
 61e:	6c 83       	std	Y+4, r22	; 0x04
 620:	5e 83       	std	Y+6, r21	; 0x06
 622:	4d 83       	std	Y+5, r20	; 0x05
    u8 Local_u8_ErrorState = SATE_OK;
 624:	1a 82       	std	Y+2, r1	; 0x02
    u8 Local_u8_PinValue ;
    if((Copy_u8_PortId <= DIO_U8_PORTD) && (Copy_u8_PinId <= DIO_U8_PIN7) && (Copy_pu8_ReturnPinValue != NULL))
 626:	8b 81       	ldd	r24, Y+3	; 0x03
 628:	84 30       	cpi	r24, 0x04	; 4
 62a:	08 f0       	brcs	.+2      	; 0x62e <DIO_enu_GetPinValue+0x26>
 62c:	9f c0       	rjmp	.+318    	; 0x76c <DIO_enu_GetPinValue+0x164>
 62e:	8c 81       	ldd	r24, Y+4	; 0x04
 630:	88 30       	cpi	r24, 0x08	; 8
 632:	08 f0       	brcs	.+2      	; 0x636 <DIO_enu_GetPinValue+0x2e>
 634:	9b c0       	rjmp	.+310    	; 0x76c <DIO_enu_GetPinValue+0x164>
 636:	8d 81       	ldd	r24, Y+5	; 0x05
 638:	9e 81       	ldd	r25, Y+6	; 0x06
 63a:	00 97       	sbiw	r24, 0x00	; 0
 63c:	09 f4       	brne	.+2      	; 0x640 <DIO_enu_GetPinValue+0x38>
 63e:	96 c0       	rjmp	.+300    	; 0x76c <DIO_enu_GetPinValue+0x164>
    {
        switch (Copy_u8_PortId)
 640:	8b 81       	ldd	r24, Y+3	; 0x03
 642:	28 2f       	mov	r18, r24
 644:	30 e0       	ldi	r19, 0x00	; 0
 646:	38 87       	std	Y+8, r19	; 0x08
 648:	2f 83       	std	Y+7, r18	; 0x07
 64a:	4f 81       	ldd	r20, Y+7	; 0x07
 64c:	58 85       	ldd	r21, Y+8	; 0x08
 64e:	41 30       	cpi	r20, 0x01	; 1
 650:	51 05       	cpc	r21, r1
 652:	a9 f1       	breq	.+106    	; 0x6be <DIO_enu_GetPinValue+0xb6>
 654:	8f 81       	ldd	r24, Y+7	; 0x07
 656:	98 85       	ldd	r25, Y+8	; 0x08
 658:	82 30       	cpi	r24, 0x02	; 2
 65a:	91 05       	cpc	r25, r1
 65c:	34 f4       	brge	.+12     	; 0x66a <DIO_enu_GetPinValue+0x62>
 65e:	2f 81       	ldd	r18, Y+7	; 0x07
 660:	38 85       	ldd	r19, Y+8	; 0x08
 662:	21 15       	cp	r18, r1
 664:	31 05       	cpc	r19, r1
 666:	71 f0       	breq	.+28     	; 0x684 <DIO_enu_GetPinValue+0x7c>
 668:	83 c0       	rjmp	.+262    	; 0x770 <DIO_enu_GetPinValue+0x168>
 66a:	4f 81       	ldd	r20, Y+7	; 0x07
 66c:	58 85       	ldd	r21, Y+8	; 0x08
 66e:	42 30       	cpi	r20, 0x02	; 2
 670:	51 05       	cpc	r21, r1
 672:	09 f4       	brne	.+2      	; 0x676 <DIO_enu_GetPinValue+0x6e>
 674:	41 c0       	rjmp	.+130    	; 0x6f8 <DIO_enu_GetPinValue+0xf0>
 676:	8f 81       	ldd	r24, Y+7	; 0x07
 678:	98 85       	ldd	r25, Y+8	; 0x08
 67a:	83 30       	cpi	r24, 0x03	; 3
 67c:	91 05       	cpc	r25, r1
 67e:	09 f4       	brne	.+2      	; 0x682 <DIO_enu_GetPinValue+0x7a>
 680:	58 c0       	rjmp	.+176    	; 0x732 <DIO_enu_GetPinValue+0x12a>
 682:	76 c0       	rjmp	.+236    	; 0x770 <DIO_enu_GetPinValue+0x168>
        {
            case DIO_U8_PORTA:Local_u8_PinValue = GET_BIT(DIO_U8_PINA_REG,Copy_u8_PinId);
 684:	e9 e3       	ldi	r30, 0x39	; 57
 686:	f0 e0       	ldi	r31, 0x00	; 0
 688:	80 81       	ld	r24, Z
 68a:	28 2f       	mov	r18, r24
 68c:	30 e0       	ldi	r19, 0x00	; 0
 68e:	8c 81       	ldd	r24, Y+4	; 0x04
 690:	88 2f       	mov	r24, r24
 692:	90 e0       	ldi	r25, 0x00	; 0
 694:	a9 01       	movw	r20, r18
 696:	02 c0       	rjmp	.+4      	; 0x69c <DIO_enu_GetPinValue+0x94>
 698:	55 95       	asr	r21
 69a:	47 95       	ror	r20
 69c:	8a 95       	dec	r24
 69e:	e2 f7       	brpl	.-8      	; 0x698 <DIO_enu_GetPinValue+0x90>
 6a0:	ca 01       	movw	r24, r20
 6a2:	81 70       	andi	r24, 0x01	; 1
 6a4:	89 83       	std	Y+1, r24	; 0x01
            if(Local_u8_PinValue == DIO_U8_LOW) {*Copy_pu8_ReturnPinValue = DIO_U8_LOW;}
 6a6:	89 81       	ldd	r24, Y+1	; 0x01
 6a8:	88 23       	and	r24, r24
 6aa:	21 f4       	brne	.+8      	; 0x6b4 <DIO_enu_GetPinValue+0xac>
 6ac:	ed 81       	ldd	r30, Y+5	; 0x05
 6ae:	fe 81       	ldd	r31, Y+6	; 0x06
 6b0:	10 82       	st	Z, r1
 6b2:	5e c0       	rjmp	.+188    	; 0x770 <DIO_enu_GetPinValue+0x168>
            else {*Copy_pu8_ReturnPinValue = DIO_U8_HIGH;}
 6b4:	ed 81       	ldd	r30, Y+5	; 0x05
 6b6:	fe 81       	ldd	r31, Y+6	; 0x06
 6b8:	81 e0       	ldi	r24, 0x01	; 1
 6ba:	80 83       	st	Z, r24
 6bc:	59 c0       	rjmp	.+178    	; 0x770 <DIO_enu_GetPinValue+0x168>
            break;
            case DIO_U8_PORTB:Local_u8_PinValue = GET_BIT(DIO_U8_PORTB_REG,Copy_u8_PinId);
 6be:	e8 e3       	ldi	r30, 0x38	; 56
 6c0:	f0 e0       	ldi	r31, 0x00	; 0
 6c2:	80 81       	ld	r24, Z
 6c4:	28 2f       	mov	r18, r24
 6c6:	30 e0       	ldi	r19, 0x00	; 0
 6c8:	8c 81       	ldd	r24, Y+4	; 0x04
 6ca:	88 2f       	mov	r24, r24
 6cc:	90 e0       	ldi	r25, 0x00	; 0
 6ce:	a9 01       	movw	r20, r18
 6d0:	02 c0       	rjmp	.+4      	; 0x6d6 <DIO_enu_GetPinValue+0xce>
 6d2:	55 95       	asr	r21
 6d4:	47 95       	ror	r20
 6d6:	8a 95       	dec	r24
 6d8:	e2 f7       	brpl	.-8      	; 0x6d2 <DIO_enu_GetPinValue+0xca>
 6da:	ca 01       	movw	r24, r20
 6dc:	81 70       	andi	r24, 0x01	; 1
 6de:	89 83       	std	Y+1, r24	; 0x01
            if(Local_u8_PinValue == DIO_U8_LOW) {*Copy_pu8_ReturnPinValue = DIO_U8_LOW;}
 6e0:	89 81       	ldd	r24, Y+1	; 0x01
 6e2:	88 23       	and	r24, r24
 6e4:	21 f4       	brne	.+8      	; 0x6ee <DIO_enu_GetPinValue+0xe6>
 6e6:	ed 81       	ldd	r30, Y+5	; 0x05
 6e8:	fe 81       	ldd	r31, Y+6	; 0x06
 6ea:	10 82       	st	Z, r1
 6ec:	41 c0       	rjmp	.+130    	; 0x770 <DIO_enu_GetPinValue+0x168>
            else {*Copy_pu8_ReturnPinValue = DIO_U8_HIGH;}
 6ee:	ed 81       	ldd	r30, Y+5	; 0x05
 6f0:	fe 81       	ldd	r31, Y+6	; 0x06
 6f2:	81 e0       	ldi	r24, 0x01	; 1
 6f4:	80 83       	st	Z, r24
 6f6:	3c c0       	rjmp	.+120    	; 0x770 <DIO_enu_GetPinValue+0x168>
            break;
            case DIO_U8_PORTC:Local_u8_PinValue = GET_BIT(DIO_U8_PORTC_REG,Copy_u8_PinId);
 6f8:	e5 e3       	ldi	r30, 0x35	; 53
 6fa:	f0 e0       	ldi	r31, 0x00	; 0
 6fc:	80 81       	ld	r24, Z
 6fe:	28 2f       	mov	r18, r24
 700:	30 e0       	ldi	r19, 0x00	; 0
 702:	8c 81       	ldd	r24, Y+4	; 0x04
 704:	88 2f       	mov	r24, r24
 706:	90 e0       	ldi	r25, 0x00	; 0
 708:	a9 01       	movw	r20, r18
 70a:	02 c0       	rjmp	.+4      	; 0x710 <DIO_enu_GetPinValue+0x108>
 70c:	55 95       	asr	r21
 70e:	47 95       	ror	r20
 710:	8a 95       	dec	r24
 712:	e2 f7       	brpl	.-8      	; 0x70c <DIO_enu_GetPinValue+0x104>
 714:	ca 01       	movw	r24, r20
 716:	81 70       	andi	r24, 0x01	; 1
 718:	89 83       	std	Y+1, r24	; 0x01
            if(Local_u8_PinValue == DIO_U8_LOW) {*Copy_pu8_ReturnPinValue = DIO_U8_LOW;}
 71a:	89 81       	ldd	r24, Y+1	; 0x01
 71c:	88 23       	and	r24, r24
 71e:	21 f4       	brne	.+8      	; 0x728 <DIO_enu_GetPinValue+0x120>
 720:	ed 81       	ldd	r30, Y+5	; 0x05
 722:	fe 81       	ldd	r31, Y+6	; 0x06
 724:	10 82       	st	Z, r1
 726:	24 c0       	rjmp	.+72     	; 0x770 <DIO_enu_GetPinValue+0x168>
            else {*Copy_pu8_ReturnPinValue = DIO_U8_HIGH;}
 728:	ed 81       	ldd	r30, Y+5	; 0x05
 72a:	fe 81       	ldd	r31, Y+6	; 0x06
 72c:	81 e0       	ldi	r24, 0x01	; 1
 72e:	80 83       	st	Z, r24
 730:	1f c0       	rjmp	.+62     	; 0x770 <DIO_enu_GetPinValue+0x168>
            break;
            case DIO_U8_PORTD:Local_u8_PinValue = GET_BIT(DIO_U8_PORTD_REG,Copy_u8_PinId);
 732:	e2 e3       	ldi	r30, 0x32	; 50
 734:	f0 e0       	ldi	r31, 0x00	; 0
 736:	80 81       	ld	r24, Z
 738:	28 2f       	mov	r18, r24
 73a:	30 e0       	ldi	r19, 0x00	; 0
 73c:	8c 81       	ldd	r24, Y+4	; 0x04
 73e:	88 2f       	mov	r24, r24
 740:	90 e0       	ldi	r25, 0x00	; 0
 742:	a9 01       	movw	r20, r18
 744:	02 c0       	rjmp	.+4      	; 0x74a <DIO_enu_GetPinValue+0x142>
 746:	55 95       	asr	r21
 748:	47 95       	ror	r20
 74a:	8a 95       	dec	r24
 74c:	e2 f7       	brpl	.-8      	; 0x746 <DIO_enu_GetPinValue+0x13e>
 74e:	ca 01       	movw	r24, r20
 750:	81 70       	andi	r24, 0x01	; 1
 752:	89 83       	std	Y+1, r24	; 0x01
            if(Local_u8_PinValue == DIO_U8_LOW) {*Copy_pu8_ReturnPinValue = DIO_U8_LOW;}
 754:	89 81       	ldd	r24, Y+1	; 0x01
 756:	88 23       	and	r24, r24
 758:	21 f4       	brne	.+8      	; 0x762 <DIO_enu_GetPinValue+0x15a>
 75a:	ed 81       	ldd	r30, Y+5	; 0x05
 75c:	fe 81       	ldd	r31, Y+6	; 0x06
 75e:	10 82       	st	Z, r1
 760:	07 c0       	rjmp	.+14     	; 0x770 <DIO_enu_GetPinValue+0x168>
            else {*Copy_pu8_ReturnPinValue = DIO_U8_HIGH;}
 762:	ed 81       	ldd	r30, Y+5	; 0x05
 764:	fe 81       	ldd	r31, Y+6	; 0x06
 766:	81 e0       	ldi	r24, 0x01	; 1
 768:	80 83       	st	Z, r24
 76a:	02 c0       	rjmp	.+4      	; 0x770 <DIO_enu_GetPinValue+0x168>
            break;
        }
    }
    else
    {
        Local_u8_ErrorState = SATE_NOT_OK;
 76c:	81 e0       	ldi	r24, 0x01	; 1
 76e:	8a 83       	std	Y+2, r24	; 0x02
    }
    return Local_u8_ErrorState;
 770:	8a 81       	ldd	r24, Y+2	; 0x02
}
 772:	28 96       	adiw	r28, 0x08	; 8
 774:	0f b6       	in	r0, 0x3f	; 63
 776:	f8 94       	cli
 778:	de bf       	out	0x3e, r29	; 62
 77a:	0f be       	out	0x3f, r0	; 63
 77c:	cd bf       	out	0x3d, r28	; 61
 77e:	cf 91       	pop	r28
 780:	df 91       	pop	r29
 782:	08 95       	ret

00000784 <DIO_enu_SetPortDirection>:

ES_t DIO_enu_SetPortDirection(u8 Copy_u8_PortId, u8 Copy_u8_PortDirection){
 784:	df 93       	push	r29
 786:	cf 93       	push	r28
 788:	cd b7       	in	r28, 0x3d	; 61
 78a:	de b7       	in	r29, 0x3e	; 62
 78c:	2d 97       	sbiw	r28, 0x0d	; 13
 78e:	0f b6       	in	r0, 0x3f	; 63
 790:	f8 94       	cli
 792:	de bf       	out	0x3e, r29	; 62
 794:	0f be       	out	0x3f, r0	; 63
 796:	cd bf       	out	0x3d, r28	; 61
 798:	8a 83       	std	Y+2, r24	; 0x02
 79a:	6b 83       	std	Y+3, r22	; 0x03
    u8 Local_u8_ErrorState = SATE_OK;
 79c:	19 82       	std	Y+1, r1	; 0x01
    if((Copy_u8_PortId <= DIO_U8_PORTD) &&((Copy_u8_PortDirection == DIO_U8_OUTPUT)||(Copy_u8_PortDirection == DIO_U8_INPUT))){
 79e:	8a 81       	ldd	r24, Y+2	; 0x02
 7a0:	84 30       	cpi	r24, 0x04	; 4
 7a2:	08 f0       	brcs	.+2      	; 0x7a6 <DIO_enu_SetPortDirection+0x22>
 7a4:	84 c0       	rjmp	.+264    	; 0x8ae <__stack+0x4f>
 7a6:	8b 81       	ldd	r24, Y+3	; 0x03
 7a8:	81 30       	cpi	r24, 0x01	; 1
 7aa:	21 f0       	breq	.+8      	; 0x7b4 <DIO_enu_SetPortDirection+0x30>
 7ac:	8b 81       	ldd	r24, Y+3	; 0x03
 7ae:	88 23       	and	r24, r24
 7b0:	09 f0       	breq	.+2      	; 0x7b4 <DIO_enu_SetPortDirection+0x30>
 7b2:	7d c0       	rjmp	.+250    	; 0x8ae <__stack+0x4f>
        switch (Copy_u8_PortId)
 7b4:	8a 81       	ldd	r24, Y+2	; 0x02
 7b6:	28 2f       	mov	r18, r24
 7b8:	30 e0       	ldi	r19, 0x00	; 0
 7ba:	3d 87       	std	Y+13, r19	; 0x0d
 7bc:	2c 87       	std	Y+12, r18	; 0x0c
 7be:	8c 85       	ldd	r24, Y+12	; 0x0c
 7c0:	9d 85       	ldd	r25, Y+13	; 0x0d
 7c2:	81 30       	cpi	r24, 0x01	; 1
 7c4:	91 05       	cpc	r25, r1
 7c6:	71 f1       	breq	.+92     	; 0x824 <DIO_enu_SetPortDirection+0xa0>
 7c8:	2c 85       	ldd	r18, Y+12	; 0x0c
 7ca:	3d 85       	ldd	r19, Y+13	; 0x0d
 7cc:	22 30       	cpi	r18, 0x02	; 2
 7ce:	31 05       	cpc	r19, r1
 7d0:	2c f4       	brge	.+10     	; 0x7dc <DIO_enu_SetPortDirection+0x58>
 7d2:	8c 85       	ldd	r24, Y+12	; 0x0c
 7d4:	9d 85       	ldd	r25, Y+13	; 0x0d
 7d6:	00 97       	sbiw	r24, 0x00	; 0
 7d8:	69 f0       	breq	.+26     	; 0x7f4 <DIO_enu_SetPortDirection+0x70>
 7da:	6b c0       	rjmp	.+214    	; 0x8b2 <__stack+0x53>
 7dc:	2c 85       	ldd	r18, Y+12	; 0x0c
 7de:	3d 85       	ldd	r19, Y+13	; 0x0d
 7e0:	22 30       	cpi	r18, 0x02	; 2
 7e2:	31 05       	cpc	r19, r1
 7e4:	b1 f1       	breq	.+108    	; 0x852 <DIO_enu_SetPortDirection+0xce>
 7e6:	8c 85       	ldd	r24, Y+12	; 0x0c
 7e8:	9d 85       	ldd	r25, Y+13	; 0x0d
 7ea:	83 30       	cpi	r24, 0x03	; 3
 7ec:	91 05       	cpc	r25, r1
 7ee:	09 f4       	brne	.+2      	; 0x7f2 <DIO_enu_SetPortDirection+0x6e>
 7f0:	47 c0       	rjmp	.+142    	; 0x880 <__stack+0x21>
 7f2:	5f c0       	rjmp	.+190    	; 0x8b2 <__stack+0x53>
        {
        case DIO_U8_PORTA:
            switch (Copy_u8_PortDirection)
 7f4:	8b 81       	ldd	r24, Y+3	; 0x03
 7f6:	28 2f       	mov	r18, r24
 7f8:	30 e0       	ldi	r19, 0x00	; 0
 7fa:	3b 87       	std	Y+11, r19	; 0x0b
 7fc:	2a 87       	std	Y+10, r18	; 0x0a
 7fe:	8a 85       	ldd	r24, Y+10	; 0x0a
 800:	9b 85       	ldd	r25, Y+11	; 0x0b
 802:	00 97       	sbiw	r24, 0x00	; 0
 804:	59 f0       	breq	.+22     	; 0x81c <DIO_enu_SetPortDirection+0x98>
 806:	2a 85       	ldd	r18, Y+10	; 0x0a
 808:	3b 85       	ldd	r19, Y+11	; 0x0b
 80a:	21 30       	cpi	r18, 0x01	; 1
 80c:	31 05       	cpc	r19, r1
 80e:	09 f0       	breq	.+2      	; 0x812 <DIO_enu_SetPortDirection+0x8e>
 810:	50 c0       	rjmp	.+160    	; 0x8b2 <__stack+0x53>
            {
            case DIO_U8_OUTPUT: DIO_U8_DDRA_REG = DIO_U8_SETPORT_OUTPUT; break;
 812:	ea e3       	ldi	r30, 0x3A	; 58
 814:	f0 e0       	ldi	r31, 0x00	; 0
 816:	8f ef       	ldi	r24, 0xFF	; 255
 818:	80 83       	st	Z, r24
 81a:	4b c0       	rjmp	.+150    	; 0x8b2 <__stack+0x53>
            case DIO_U8_INPUT: DIO_U8_DDRA_REG =  DIO_U8_SETPORT_INPUT; break;
 81c:	ea e3       	ldi	r30, 0x3A	; 58
 81e:	f0 e0       	ldi	r31, 0x00	; 0
 820:	10 82       	st	Z, r1
 822:	47 c0       	rjmp	.+142    	; 0x8b2 <__stack+0x53>
            }
        break;
        case DIO_U8_PORTB:
            switch (Copy_u8_PortDirection)
 824:	8b 81       	ldd	r24, Y+3	; 0x03
 826:	28 2f       	mov	r18, r24
 828:	30 e0       	ldi	r19, 0x00	; 0
 82a:	39 87       	std	Y+9, r19	; 0x09
 82c:	28 87       	std	Y+8, r18	; 0x08
 82e:	88 85       	ldd	r24, Y+8	; 0x08
 830:	99 85       	ldd	r25, Y+9	; 0x09
 832:	00 97       	sbiw	r24, 0x00	; 0
 834:	51 f0       	breq	.+20     	; 0x84a <DIO_enu_SetPortDirection+0xc6>
 836:	28 85       	ldd	r18, Y+8	; 0x08
 838:	39 85       	ldd	r19, Y+9	; 0x09
 83a:	21 30       	cpi	r18, 0x01	; 1
 83c:	31 05       	cpc	r19, r1
 83e:	c9 f5       	brne	.+114    	; 0x8b2 <__stack+0x53>
                {
                case DIO_U8_OUTPUT: DIO_U8_DDRB_REG = DIO_U8_SETPORT_OUTPUT; break;
 840:	e7 e3       	ldi	r30, 0x37	; 55
 842:	f0 e0       	ldi	r31, 0x00	; 0
 844:	8f ef       	ldi	r24, 0xFF	; 255
 846:	80 83       	st	Z, r24
 848:	34 c0       	rjmp	.+104    	; 0x8b2 <__stack+0x53>
                case DIO_U8_INPUT: DIO_U8_DDRB_REG =  DIO_U8_SETPORT_INPUT; break;
 84a:	e7 e3       	ldi	r30, 0x37	; 55
 84c:	f0 e0       	ldi	r31, 0x00	; 0
 84e:	10 82       	st	Z, r1
 850:	30 c0       	rjmp	.+96     	; 0x8b2 <__stack+0x53>
                }
         break;
        case DIO_U8_PORTC:
            switch (Copy_u8_PortDirection)
 852:	8b 81       	ldd	r24, Y+3	; 0x03
 854:	28 2f       	mov	r18, r24
 856:	30 e0       	ldi	r19, 0x00	; 0
 858:	3f 83       	std	Y+7, r19	; 0x07
 85a:	2e 83       	std	Y+6, r18	; 0x06
 85c:	8e 81       	ldd	r24, Y+6	; 0x06
 85e:	9f 81       	ldd	r25, Y+7	; 0x07
 860:	00 97       	sbiw	r24, 0x00	; 0
 862:	51 f0       	breq	.+20     	; 0x878 <__stack+0x19>
 864:	2e 81       	ldd	r18, Y+6	; 0x06
 866:	3f 81       	ldd	r19, Y+7	; 0x07
 868:	21 30       	cpi	r18, 0x01	; 1
 86a:	31 05       	cpc	r19, r1
 86c:	11 f5       	brne	.+68     	; 0x8b2 <__stack+0x53>
                {
                case DIO_U8_OUTPUT: DIO_U8_DDRC_REG = DIO_U8_SETPORT_OUTPUT; break;
 86e:	e4 e3       	ldi	r30, 0x34	; 52
 870:	f0 e0       	ldi	r31, 0x00	; 0
 872:	8f ef       	ldi	r24, 0xFF	; 255
 874:	80 83       	st	Z, r24
 876:	1d c0       	rjmp	.+58     	; 0x8b2 <__stack+0x53>
                case DIO_U8_INPUT: DIO_U8_DDRC_REG = DIO_U8_SETPORT_INPUT; break;
 878:	e4 e3       	ldi	r30, 0x34	; 52
 87a:	f0 e0       	ldi	r31, 0x00	; 0
 87c:	10 82       	st	Z, r1
 87e:	19 c0       	rjmp	.+50     	; 0x8b2 <__stack+0x53>
                }
        break;
        case DIO_U8_PORTD:
            switch (Copy_u8_PortDirection)
 880:	8b 81       	ldd	r24, Y+3	; 0x03
 882:	28 2f       	mov	r18, r24
 884:	30 e0       	ldi	r19, 0x00	; 0
 886:	3d 83       	std	Y+5, r19	; 0x05
 888:	2c 83       	std	Y+4, r18	; 0x04
 88a:	8c 81       	ldd	r24, Y+4	; 0x04
 88c:	9d 81       	ldd	r25, Y+5	; 0x05
 88e:	00 97       	sbiw	r24, 0x00	; 0
 890:	51 f0       	breq	.+20     	; 0x8a6 <__stack+0x47>
 892:	2c 81       	ldd	r18, Y+4	; 0x04
 894:	3d 81       	ldd	r19, Y+5	; 0x05
 896:	21 30       	cpi	r18, 0x01	; 1
 898:	31 05       	cpc	r19, r1
 89a:	59 f4       	brne	.+22     	; 0x8b2 <__stack+0x53>
                {
                case DIO_U8_OUTPUT: DIO_U8_DDRD_REG = DIO_U8_SETPORT_OUTPUT; break;
 89c:	e1 e3       	ldi	r30, 0x31	; 49
 89e:	f0 e0       	ldi	r31, 0x00	; 0
 8a0:	8f ef       	ldi	r24, 0xFF	; 255
 8a2:	80 83       	st	Z, r24
 8a4:	06 c0       	rjmp	.+12     	; 0x8b2 <__stack+0x53>
                case DIO_U8_INPUT: DIO_U8_DDRD_REG = DIO_U8_SETPORT_INPUT; break;
 8a6:	e1 e3       	ldi	r30, 0x31	; 49
 8a8:	f0 e0       	ldi	r31, 0x00	; 0
 8aa:	10 82       	st	Z, r1
 8ac:	02 c0       	rjmp	.+4      	; 0x8b2 <__stack+0x53>
                }
        break;
        }
    }else{
        Local_u8_ErrorState = SATE_NOT_OK;
 8ae:	81 e0       	ldi	r24, 0x01	; 1
 8b0:	89 83       	std	Y+1, r24	; 0x01
    }
    return Local_u8_ErrorState;
 8b2:	89 81       	ldd	r24, Y+1	; 0x01
}
 8b4:	2d 96       	adiw	r28, 0x0d	; 13
 8b6:	0f b6       	in	r0, 0x3f	; 63
 8b8:	f8 94       	cli
 8ba:	de bf       	out	0x3e, r29	; 62
 8bc:	0f be       	out	0x3f, r0	; 63
 8be:	cd bf       	out	0x3d, r28	; 61
 8c0:	cf 91       	pop	r28
 8c2:	df 91       	pop	r29
 8c4:	08 95       	ret

000008c6 <DIO_enu_SetPortValue>:

ES_t DIO_enu_SetPortValue(u8 Copy_u8_PortId, u8 Copy_u8_PortValue){
 8c6:	df 93       	push	r29
 8c8:	cf 93       	push	r28
 8ca:	00 d0       	rcall	.+0      	; 0x8cc <DIO_enu_SetPortValue+0x6>
 8cc:	00 d0       	rcall	.+0      	; 0x8ce <DIO_enu_SetPortValue+0x8>
 8ce:	0f 92       	push	r0
 8d0:	cd b7       	in	r28, 0x3d	; 61
 8d2:	de b7       	in	r29, 0x3e	; 62
 8d4:	8a 83       	std	Y+2, r24	; 0x02
 8d6:	6b 83       	std	Y+3, r22	; 0x03
	u8 Local_u8_ErrorState = SATE_OK;
 8d8:	19 82       	std	Y+1, r1	; 0x01
	    if((Copy_u8_PortId <= DIO_U8_PORTD)){
 8da:	8a 81       	ldd	r24, Y+2	; 0x02
 8dc:	84 30       	cpi	r24, 0x04	; 4
 8de:	98 f5       	brcc	.+102    	; 0x946 <DIO_enu_SetPortValue+0x80>
	        switch (Copy_u8_PortId)
 8e0:	8a 81       	ldd	r24, Y+2	; 0x02
 8e2:	28 2f       	mov	r18, r24
 8e4:	30 e0       	ldi	r19, 0x00	; 0
 8e6:	3d 83       	std	Y+5, r19	; 0x05
 8e8:	2c 83       	std	Y+4, r18	; 0x04
 8ea:	8c 81       	ldd	r24, Y+4	; 0x04
 8ec:	9d 81       	ldd	r25, Y+5	; 0x05
 8ee:	81 30       	cpi	r24, 0x01	; 1
 8f0:	91 05       	cpc	r25, r1
 8f2:	d1 f0       	breq	.+52     	; 0x928 <DIO_enu_SetPortValue+0x62>
 8f4:	2c 81       	ldd	r18, Y+4	; 0x04
 8f6:	3d 81       	ldd	r19, Y+5	; 0x05
 8f8:	22 30       	cpi	r18, 0x02	; 2
 8fa:	31 05       	cpc	r19, r1
 8fc:	2c f4       	brge	.+10     	; 0x908 <DIO_enu_SetPortValue+0x42>
 8fe:	8c 81       	ldd	r24, Y+4	; 0x04
 900:	9d 81       	ldd	r25, Y+5	; 0x05
 902:	00 97       	sbiw	r24, 0x00	; 0
 904:	61 f0       	breq	.+24     	; 0x91e <DIO_enu_SetPortValue+0x58>
 906:	21 c0       	rjmp	.+66     	; 0x94a <DIO_enu_SetPortValue+0x84>
 908:	2c 81       	ldd	r18, Y+4	; 0x04
 90a:	3d 81       	ldd	r19, Y+5	; 0x05
 90c:	22 30       	cpi	r18, 0x02	; 2
 90e:	31 05       	cpc	r19, r1
 910:	81 f0       	breq	.+32     	; 0x932 <DIO_enu_SetPortValue+0x6c>
 912:	8c 81       	ldd	r24, Y+4	; 0x04
 914:	9d 81       	ldd	r25, Y+5	; 0x05
 916:	83 30       	cpi	r24, 0x03	; 3
 918:	91 05       	cpc	r25, r1
 91a:	81 f0       	breq	.+32     	; 0x93c <DIO_enu_SetPortValue+0x76>
 91c:	16 c0       	rjmp	.+44     	; 0x94a <DIO_enu_SetPortValue+0x84>
	        {
	        case DIO_U8_PORTA:DIO_U8_PORTA_REG = Copy_u8_PortValue; break;
 91e:	eb e3       	ldi	r30, 0x3B	; 59
 920:	f0 e0       	ldi	r31, 0x00	; 0
 922:	8b 81       	ldd	r24, Y+3	; 0x03
 924:	80 83       	st	Z, r24
 926:	11 c0       	rjmp	.+34     	; 0x94a <DIO_enu_SetPortValue+0x84>
	        case DIO_U8_PORTB:DIO_U8_PORTB_REG = Copy_u8_PortValue; break;
 928:	e8 e3       	ldi	r30, 0x38	; 56
 92a:	f0 e0       	ldi	r31, 0x00	; 0
 92c:	8b 81       	ldd	r24, Y+3	; 0x03
 92e:	80 83       	st	Z, r24
 930:	0c c0       	rjmp	.+24     	; 0x94a <DIO_enu_SetPortValue+0x84>
	        case DIO_U8_PORTC:DIO_U8_PORTC_REG = Copy_u8_PortValue; break;
 932:	e5 e3       	ldi	r30, 0x35	; 53
 934:	f0 e0       	ldi	r31, 0x00	; 0
 936:	8b 81       	ldd	r24, Y+3	; 0x03
 938:	80 83       	st	Z, r24
 93a:	07 c0       	rjmp	.+14     	; 0x94a <DIO_enu_SetPortValue+0x84>
	        case DIO_U8_PORTD:DIO_U8_PORTD_REG = Copy_u8_PortValue; break;
 93c:	e2 e3       	ldi	r30, 0x32	; 50
 93e:	f0 e0       	ldi	r31, 0x00	; 0
 940:	8b 81       	ldd	r24, Y+3	; 0x03
 942:	80 83       	st	Z, r24
 944:	02 c0       	rjmp	.+4      	; 0x94a <DIO_enu_SetPortValue+0x84>
	        }
	    }else{
	        Local_u8_ErrorState = SATE_NOT_OK;
 946:	81 e0       	ldi	r24, 0x01	; 1
 948:	89 83       	std	Y+1, r24	; 0x01
	    }
	    return Local_u8_ErrorState;
 94a:	89 81       	ldd	r24, Y+1	; 0x01
}
 94c:	0f 90       	pop	r0
 94e:	0f 90       	pop	r0
 950:	0f 90       	pop	r0
 952:	0f 90       	pop	r0
 954:	0f 90       	pop	r0
 956:	cf 91       	pop	r28
 958:	df 91       	pop	r29
 95a:	08 95       	ret

0000095c <DIO_enu_GetPortValue>:

ES_t DIO_enu_GetPortValue(u8 Copy_u8_PortId, u8 * Copy_u8_ReturnPortValue){
 95c:	df 93       	push	r29
 95e:	cf 93       	push	r28
 960:	00 d0       	rcall	.+0      	; 0x962 <DIO_enu_GetPortValue+0x6>
 962:	00 d0       	rcall	.+0      	; 0x964 <DIO_enu_GetPortValue+0x8>
 964:	00 d0       	rcall	.+0      	; 0x966 <DIO_enu_GetPortValue+0xa>
 966:	cd b7       	in	r28, 0x3d	; 61
 968:	de b7       	in	r29, 0x3e	; 62
 96a:	8a 83       	std	Y+2, r24	; 0x02
 96c:	7c 83       	std	Y+4, r23	; 0x04
 96e:	6b 83       	std	Y+3, r22	; 0x03
    u8 Local_u8_ErrorState = SATE_OK;
 970:	19 82       	std	Y+1, r1	; 0x01
    if((Copy_u8_PortId<= DIO_U8_PORTD) && (Copy_u8_ReturnPortValue != NULL)){
 972:	8a 81       	ldd	r24, Y+2	; 0x02
 974:	84 30       	cpi	r24, 0x04	; 4
 976:	08 f0       	brcs	.+2      	; 0x97a <DIO_enu_GetPortValue+0x1e>
 978:	3f c0       	rjmp	.+126    	; 0x9f8 <DIO_enu_GetPortValue+0x9c>
 97a:	8b 81       	ldd	r24, Y+3	; 0x03
 97c:	9c 81       	ldd	r25, Y+4	; 0x04
 97e:	00 97       	sbiw	r24, 0x00	; 0
 980:	d9 f1       	breq	.+118    	; 0x9f8 <DIO_enu_GetPortValue+0x9c>
        switch (Copy_u8_PortId)
 982:	8a 81       	ldd	r24, Y+2	; 0x02
 984:	28 2f       	mov	r18, r24
 986:	30 e0       	ldi	r19, 0x00	; 0
 988:	3e 83       	std	Y+6, r19	; 0x06
 98a:	2d 83       	std	Y+5, r18	; 0x05
 98c:	8d 81       	ldd	r24, Y+5	; 0x05
 98e:	9e 81       	ldd	r25, Y+6	; 0x06
 990:	81 30       	cpi	r24, 0x01	; 1
 992:	91 05       	cpc	r25, r1
 994:	e1 f0       	breq	.+56     	; 0x9ce <DIO_enu_GetPortValue+0x72>
 996:	2d 81       	ldd	r18, Y+5	; 0x05
 998:	3e 81       	ldd	r19, Y+6	; 0x06
 99a:	22 30       	cpi	r18, 0x02	; 2
 99c:	31 05       	cpc	r19, r1
 99e:	2c f4       	brge	.+10     	; 0x9aa <DIO_enu_GetPortValue+0x4e>
 9a0:	8d 81       	ldd	r24, Y+5	; 0x05
 9a2:	9e 81       	ldd	r25, Y+6	; 0x06
 9a4:	00 97       	sbiw	r24, 0x00	; 0
 9a6:	61 f0       	breq	.+24     	; 0x9c0 <DIO_enu_GetPortValue+0x64>
 9a8:	29 c0       	rjmp	.+82     	; 0x9fc <DIO_enu_GetPortValue+0xa0>
 9aa:	2d 81       	ldd	r18, Y+5	; 0x05
 9ac:	3e 81       	ldd	r19, Y+6	; 0x06
 9ae:	22 30       	cpi	r18, 0x02	; 2
 9b0:	31 05       	cpc	r19, r1
 9b2:	a1 f0       	breq	.+40     	; 0x9dc <DIO_enu_GetPortValue+0x80>
 9b4:	8d 81       	ldd	r24, Y+5	; 0x05
 9b6:	9e 81       	ldd	r25, Y+6	; 0x06
 9b8:	83 30       	cpi	r24, 0x03	; 3
 9ba:	91 05       	cpc	r25, r1
 9bc:	b1 f0       	breq	.+44     	; 0x9ea <DIO_enu_GetPortValue+0x8e>
 9be:	1e c0       	rjmp	.+60     	; 0x9fc <DIO_enu_GetPortValue+0xa0>
        {
        case DIO_U8_PORTA: *Copy_u8_ReturnPortValue = DIO_U8_PINA_REG;break;
 9c0:	e9 e3       	ldi	r30, 0x39	; 57
 9c2:	f0 e0       	ldi	r31, 0x00	; 0
 9c4:	80 81       	ld	r24, Z
 9c6:	eb 81       	ldd	r30, Y+3	; 0x03
 9c8:	fc 81       	ldd	r31, Y+4	; 0x04
 9ca:	80 83       	st	Z, r24
 9cc:	17 c0       	rjmp	.+46     	; 0x9fc <DIO_enu_GetPortValue+0xa0>
        case DIO_U8_PORTB: *Copy_u8_ReturnPortValue = DIO_U8_PINB_REG;break;
 9ce:	e6 e3       	ldi	r30, 0x36	; 54
 9d0:	f0 e0       	ldi	r31, 0x00	; 0
 9d2:	80 81       	ld	r24, Z
 9d4:	eb 81       	ldd	r30, Y+3	; 0x03
 9d6:	fc 81       	ldd	r31, Y+4	; 0x04
 9d8:	80 83       	st	Z, r24
 9da:	10 c0       	rjmp	.+32     	; 0x9fc <DIO_enu_GetPortValue+0xa0>
        case DIO_U8_PORTC: *Copy_u8_ReturnPortValue = DIO_U8_PINC_REG;break;
 9dc:	e3 e3       	ldi	r30, 0x33	; 51
 9de:	f0 e0       	ldi	r31, 0x00	; 0
 9e0:	80 81       	ld	r24, Z
 9e2:	eb 81       	ldd	r30, Y+3	; 0x03
 9e4:	fc 81       	ldd	r31, Y+4	; 0x04
 9e6:	80 83       	st	Z, r24
 9e8:	09 c0       	rjmp	.+18     	; 0x9fc <DIO_enu_GetPortValue+0xa0>
        case DIO_U8_PORTD: *Copy_u8_ReturnPortValue = DIO_U8_PIND_REG;break;
 9ea:	e0 e3       	ldi	r30, 0x30	; 48
 9ec:	f0 e0       	ldi	r31, 0x00	; 0
 9ee:	80 81       	ld	r24, Z
 9f0:	eb 81       	ldd	r30, Y+3	; 0x03
 9f2:	fc 81       	ldd	r31, Y+4	; 0x04
 9f4:	80 83       	st	Z, r24
 9f6:	02 c0       	rjmp	.+4      	; 0x9fc <DIO_enu_GetPortValue+0xa0>
        }
    }
    else{
        Local_u8_ErrorState = SATE_NOT_OK;
 9f8:	81 e0       	ldi	r24, 0x01	; 1
 9fa:	89 83       	std	Y+1, r24	; 0x01
    }
    return Local_u8_ErrorState;
 9fc:	89 81       	ldd	r24, Y+1	; 0x01
}
 9fe:	26 96       	adiw	r28, 0x06	; 6
 a00:	0f b6       	in	r0, 0x3f	; 63
 a02:	f8 94       	cli
 a04:	de bf       	out	0x3e, r29	; 62
 a06:	0f be       	out	0x3f, r0	; 63
 a08:	cd bf       	out	0x3d, r28	; 61
 a0a:	cf 91       	pop	r28
 a0c:	df 91       	pop	r29
 a0e:	08 95       	ret

00000a10 <_exit>:
 a10:	f8 94       	cli

00000a12 <__stop_program>:
 a12:	ff cf       	rjmp	.-2      	; 0xa12 <__stop_program>
